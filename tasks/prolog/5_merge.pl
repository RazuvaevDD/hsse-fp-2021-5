% определить предикат mrg(L1, L2, R) который для двух отсортированных списков L1 и L2 
% определяет список R, составленный из этих элементов

mrg([], [], []).
mrg(L, [], L).
mrg([], L, L).

%определение порядка сортировки списков
mrg([H1|[H2|L]], L2, R):-
	H1<H2,
	mrg_a([H1|[H2|L]], L2, R).
mrg(L1, [H1|[H2|L]], R):-
	H1<H2,
	mrg_a(L1, [H1|[H2|L]], R).
mrg([H1|[H2|L]], L2, R):-
	H1>=H2,
	mrg_d([H1|[H2|L]], L2, R).
mrg(L1, [H1|[H2|L]], R):-
	H1>=H2,
	mrg_d(L1, [H1|[H2|L]], R).

%для списков, отсортированных по возрастанию
mrg_a([], [], []).
mrg_a(L, [], L).
mrg_a([], L, L).
mrg_a([H1|L1], [H2|L2], [H1|R]):-
	H1<H2,
	mrg_a(L1, [H2|L2], R).
mrg_a([H1|L1], [H2|L2], [H2|R]):-
	H1>=H2,
	mrg_a([H1|L1], L2, R).
	
%для списков, отсортированных по убыванию	
mrg_d([], [], []).
mrg_d(L, [], L).
mrg_d([], L, L).	
mrg_d([H1|L1], [H2|L2], [H1|R]):-
	H1>=H2,
	mrg_d(L1, [H2|L2], R).
mrg_d([H1|L1], [H2|L2], [H2|R]):-
	H1<H2,
	mrg_d([H1|L1], L2, R).
	
	